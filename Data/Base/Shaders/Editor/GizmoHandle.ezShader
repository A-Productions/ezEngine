[PLATFORMS] 
ALL

[PERMUTATIONS]

RENDER_PASS
GIZMO_CONSTANT_SIZE
PREPARE_DEPTH

[RENDERSTATE]

CullMode = CullMode_None

#if PREPARE_DEPTH == TRUE
	DepthTest = true
	DepthWrite = true
	DepthTestFunc = CompareFunc_Greater
	
#else
	DepthTest = true
	DepthWrite = true
	DepthTestFunc = CompareFunc_LessEqual
	
#endif

#if !PREPARE_DEPTH && RENDER_PASS == RENDER_PASS_FORWARD
	BlendingEnabled0 = true
	BlendOp0 = BlendOp_Add
	DestBlend0 = Blend_InvSrcAlpha
	SourceBlend0 = Blend_SrcAlpha
#endif

[VERTEXSHADER]

#include <Shaders/Common/GlobalConstants.h>
#include <Shaders/Editor/GizmoConstants.h>
#include <Shaders/Materials/MaterialInterpolator.inc>

#if EZ_ENABLED(PLATFORM_DX11)

VS_OUT_COLORED main(VS_IN_COLORED Input)
{
	float3 centerPosition = mul(ObjectToWorldMatrix, float4(0, 0, 0, 1)).xyz;
		
	#if GIZMO_CONSTANT_SIZE == 1
		float scale = length(centerPosition - CameraPosition) * GizmoScale;
	#else
		float scale = 1.0f;
	#endif
	
	float4 worldSpacePos = mul(ObjectToWorldMatrix, float4(Input.Position * scale, 1.0f));
	
	VS_OUT_COLORED RetVal;
	RetVal.Position = mul(WorldToScreenMatrix, worldSpacePos);
	RetVal.Color =  GizmoColor;
	
	return RetVal;
}

#endif


[PIXELSHADER]

#include <Shaders/Common/GlobalConstants.h>
#include <Shaders/Editor/GizmoConstants.h>
#include <Shaders/Materials/MaterialInterpolator.inc>

#if EZ_ENABLED(PLATFORM_DX11)

float4 main(PS_IN_COLORED Input) : SV_Target
{
#if PREPARE_DEPTH == 1
	return float4(0, 0, 0, 1);
#else

	#if RENDER_PASS == RENDER_PASS_EDITOR
		if (RenderPass == EDITOR_RENDER_PASS_PICKING)
		{
			return UIntToFloat4(GameObjectID);
		}
	#elif RENDER_PASS == RENDER_PASS_WIREFRAME
		if (RenderPass == WIREFRAME_RENDER_PASS_PICKING)
		{
			return UIntToFloat4(GameObjectID);
		}
	#endif

	return Input.Color;
	
#endif
}

#endif

