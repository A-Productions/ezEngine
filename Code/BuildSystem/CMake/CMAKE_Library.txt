#cmake

# Get the name of this folder
get_filename_component (CUR_FOLDER_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME_WE)
get_filename_component (PARENT_FOLDER ${CMAKE_CURRENT_SOURCE_DIR} PATH)
get_filename_component (PARENT_FOLDER_NAME ${PARENT_FOLDER} NAME_WE)

# the library name
set (PROJECT_NAME "${CUR_FOLDER_NAME}")
set (PROJECT_FOLDER_NAME ${CUR_FOLDER_NAME})

message (STATUS "Adding Library: ${PROJECT_NAME}")

set (LIST_SOURCE_GROUP_FOLDER "")
set (LIST_CURRENT_FOLDER ${CMAKE_CURRENT_SOURCE_DIR})
set (ALL_SOURCE_FILES "")

ez_all_vars()

include (${EZ_CMAKE_UTILS_PATH}/CMAKE_LibraryFolder.txt)

if (MSVC)
  ADD_MSVC_PRECOMPILED_HEADER()
endif ()

# add the library to the solution
if (EZ_COMPILE_ENGINE_AS_DLL)
  # add the project as a shared library
  add_library (${PROJECT_NAME} SHARED ${ALL_SOURCE_FILES})
else ()
  # add the project as a static library
  add_library (${PROJECT_NAME} ${ALL_SOURCE_FILES})
endif ()

ez_set_default_target_output_dirs(${PROJECT_NAME})
ez_set_common_target_include_dirs(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR})
ez_set_common_target_definitions(${PROJECT_NAME})
ez_set_build_flags(${PROJECT_NAME})
ez_set_library_properties(${PROJECT_NAME})
ez_set_project_ide_folder(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR})

ez_ci_add_to_targets_list(${PROJECT_NAME} C++)




